name: Release new version

on:
  push:
    tags:
      - "v*.*.*"
      
permissions:
  contents: write
  checks: write

jobs:
  run-tests:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Create Virtual Environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
      - name: Install dependencies
        run: |
          pip install -r requirements-test.txt
      - name: Generate resources
        run: |
          ./generate-resources.sh
      - name: Test coverage
        run: |
          PYTHONPATH=src coverage run -m xmlrunner -o test-results discover -v fk.tests
      - name: Publish test report
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'test-results/TEST-*.xml'
      - name: Upload code coverage to coveralls.io
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package-linux:
    runs-on: ubuntu-22.04
    needs: run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Create Virtual Environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
      - name: Install dependencies
        run: |
          pip install -r requirements-build.txt
      - name: Generate resources
        run: |
          ./generate-resources.sh
      - name: Package builds
        run: |
          pyinstaller installer/portable-build.spec
          pyinstaller installer/normal-build.spec
          cd dist
          tar -czf flowkeeper.tar.gz flowkeeper
          cd ..
      - name: Create DEB installer
        run: |
          ./package-deb.sh
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/Flowkeeper
            dist/flowkeeper.deb
            dist/flowkeeper.tar.gz

  package-windows:
    runs-on: windows-latest
    needs: run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements-build.txt
      - name: Generate resources
        run: |
          cd res
          pyside6-rcc --project -o resources.qrc
          pyside6-rcc -g python resources.qrc -o "../src/fk/desktop/resources.py"
      - name: Package builds
        run: |
          pyinstaller installer\portable-build.spec
          pyinstaller installer\normal-build.spec
      - name: Download innosetup installer
        run: |
          Invoke-WebRequest -Uri "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe" -OutFile "innosetup.exe"
      - name: Install innosetup
        shell: cmd
        run: |
          start /wait innosetup.exe /VERYSILENT /CURRENTUSER /SUPPRESSMSGBOXES /NOICONS
      - name: Create FK installer
        shell: cmd
        run: |
          set /p FIRST_LINE=< res\CHANGELOG.txt
          set FK_VERSION=%FIRST_LINE:* =%
          "%USERPROFILE%\AppData\Local\Programs\Inno Setup 6\ISCC.exe" installer\windows-installer.iss
          move installer\Output\mysetup.exe dist\setup.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/Flowkeeper.exe
            dist/setup.exe

  package-macOS:
    runs-on: macOS-latest
    needs: run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Create Virtual Environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
      - name: Install dependencies
        run: |
          pip install -r requirements-build.txt
          brew install create-dmg
      - name: Generate resources
        run: |
          ./generate-resources.sh
      - name: Package builds
        run: |
          # There's no portable executables in macOS as such
          # pyinstaller installer/portable-build.spec
          pyinstaller installer/normal-build.spec
      - name: Create DMG installer
        run: |
          rm -rf dist/flowkeeper
          create-dmg \
            --volname "Flowkeeper Installer" \
            --volicon "res/flowkeeper.icns" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "Flowkeeper.app" 200 190 \
            --hide-extension "Flowkeeper.app" \
            --app-drop-link 600 185 \
            "Flowkeeper.dmg" \
            "dist/"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Flowkeeper.dmg

  remote-pipeline:
    runs-on: ubuntu-22.04
    needs: [package-macOS, package-windows, package-linux]
    steps:
      - name: Trigger remote job
        env:
          REMOTE_URL: ${{ secrets.REMOTE_URL }}
          REMOTE_USER_TOKEN: ${{ secrets.REMOTE_USER_TOKEN }}
          REMOTE_JOB_TOKEN: ${{ secrets.REMOTE_RELEASE_JOB_TOKEN }}
        run: |
          curl -I -u "github-trigger:$REMOTE_USER_TOKEN" "$REMOTE_URL/job/gh-release/build?token=$REMOTE_JOB_TOKEN" 2>/dev/null > /dev/null
