name: Build binaries

on:
  workflow_dispatch:
    inputs:
      OS:
        description: 'Operating system'
        required: true
        default: 'linux'
        type: choice
        options:
          - linux
          - windows
          - macOS
jobs:
  package-linux:
    runs-on: ubuntu-latest
    if:  ${{ inputs.OS == 'linux' }} 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Create Virtual Environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Generate resources
        run: |
          ./generate-resources.sh
      - name: Package builds
        run: |
          pyinstaller installer/portable-build.spec
          # We'll use the normal build for creating DEBs, RPMs, etc.
          # pyinstaller installer/normal-build.spec
      - name: Archive portable build
        uses: actions/upload-artifact@v3
        with:
          name: dist-linux-standalone
          path: |
            dist/Flowkeeper

  package-windows:
    runs-on: windows-latest
    if:  ${{ inputs.OS == 'windows' }} 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Generate resources
        run: |
          cd res
          cd common
          pyside6-rcc --project -o theme-common.qrc
          pyside6-rcc -g python theme-common.qrc -o "../../src/fk/desktop/theme_common.py"
          cd ..
          cd light
          pyside6-rcc --project -o theme-light.qrc
          pyside6-rcc -g python theme-light.qrc -o "../../src/fk/desktop/theme_light.py"
          cd ..
          cd dark
          pyside6-rcc --project -o theme-dark.qrc
          pyside6-rcc -g python theme-dark.qrc -o "../../src/fk/desktop/theme_dark.py"
          cd ..
          cd mixed
          pyside6-rcc --project -o theme-mixed.qrc
          pyside6-rcc -g python theme-mixed.qrc -o "../../src/fk/desktop/theme_mixed.py"
          cd ..
      - name: Package builds
        run: |
          pyinstaller installer\portable-build.spec
          pyinstaller installer\normal-build.spec
      - name: Archive portable build
        uses: actions/upload-artifact@v3
        with:
          name: dist-windows-standalone
          path: |
            dist/Flowkeeper.exe
      - name: Download innosetup installer
        run: |
          Invoke-WebRequest -Uri "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe" -OutFile "innosetup.exe"
      - name: Install innosetup
        shell: cmd
        run: |
          start /wait innosetup.exe /VERYSILENT /CURRENTUSER /SUPPRESSMSGBOXES /NOICONS
      - name: Create FK installer
        shell: cmd
        run: |
          set /p FIRST_LINE=< res\common\CHANGELOG.txt
          set FK_VERSION=%FIRST_LINE:* =%
          "%USERPROFILE%\AppData\Local\Programs\Inno Setup 6\ISCC.exe" installer\windows-installer.iss
          move installer\Output\mysetup.exe dist\setup.exe
      - name: Archive installer
        uses: actions/upload-artifact@v3
        with:
          name: dist-windows-setup
          path: |
            dist\setup.exe
        
  package-macOS:
    runs-on: macOS-latest
    if:  ${{ inputs.OS == 'macOS' }} 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Create Virtual Environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          brew install create-dmg
      - name: Generate resources
        run: |
          ./generate-resources.sh
      - name: Package builds
        run: |
          # There's no portable executables in macOS as such
          # pyinstaller installer/portable-build.spec
          pyinstaller installer/normal-build.spec
      - name: Create DMG installer
        run: |
          rm -rf dist/flowkeeper
          create-dmg \
            --volname "Flowkeeper Installer" \
            --volicon "res/flowkeeper.icns" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "Flowkeeper.app" 200 190 \
            --hide-extension "Flowkeeper.app" \
            --app-drop-link 600 185 \
            "Flowkeeper.dmg" \
            "dist/"
      - name: Archive DMG installer
        uses: actions/upload-artifact@v3
        with:
          name: dist-macOS-dmg
          path: |
            Flowkeeper.dmg
